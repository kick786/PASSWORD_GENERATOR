{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "677c008c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the desired length of the password: 7\n",
      "Include uppercase letters? (y/n): Y\n",
      "Include numbers? (y/n): 5555\n",
      "Include special characters? (y/n): @#$%\n",
      "Generated Password: YIOAuIZ\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "import string\n",
    "\n",
    "def generate_password(length, include_uppercase=True, include_numbers=True, include_special_chars=True):\n",
    "    chars = string.ascii_lowercase\n",
    "    if include_uppercase:\n",
    "        chars += string.ascii_uppercase\n",
    "    if include_numbers:\n",
    "        chars += string.digits\n",
    "    if include_special_chars:\n",
    "        chars += string.punctuation\n",
    "\n",
    "    password = ''.join(random.choice(chars) for _ in range(length))\n",
    "    return password\n",
    "\n",
    "# Sample usage\n",
    "length = int(input(\"Enter the desired length of the password: \"))\n",
    "include_uppercase = input(\"Include uppercase letters? (y/n): \").lower() == 'y'\n",
    "include_numbers = input(\"Include numbers? (y/n): \").lower() == 'y'\n",
    "include_special_chars = input(\"Include special characters? (y/n): \").lower() == 'y'\n",
    "\n",
    "password = generate_password(length, include_uppercase, include_numbers, include_special_chars)\n",
    "print(\"Generated Password:\", password)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f874bb77",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
